{{- if .Values.ingress -}}
{{- $env := include "base.env" . -}}
{{- $proj := include "base.proj" . -}}
{{- range .Values.ingress.hosts }}
{{- if eq .ca "cem" -}}
{{ printf "\n" }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ $env }}-{{ $proj }}-certificate-{{ .host | replace "ENV" $env | replace "." "-" }}
  namespace: {{ $env }}-{{ $proj }}
  annotations:
    cem.asa.tccenter.ru/authorLogin: {{ $.Values.ingress.cem.authorLogin | quote }}
    cem.asa.tccenter.ru/authorEmail: {{ $.Values.ingress.cem.authorEmail | quote }}
spec:
  secretName: {{ $env }}-{{ $proj }}-ingress-tls-{{ .host | replace "ENV" $env | replace "." "-" }}
  duration: 2160h0m0s
  renewBefore: 168h0m0s
  subject:
    organizations:
      - stoloto
  commonName: "{{ .host | replace "ENV" $env }}"
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 4096
  dnsNames:
    - "{{ .host | replace "ENV" $env }}"
    {{- range .aliases }}
    - "{{ . | replace "ENV" $env }}"
    {{- end }}
  issuerRef:
    {{- if eq $env "prod" }}
    name: cemissuer-prod-manual
    kind: CEMIssuer
    group: cem.asa.tccenter.ru
    {{- else }}
    name: cemissuer-test-auto
    kind: CEMIssuer
    group: cem.asa.tccenter.ru
    {{- end }}
{{- end -}}

{{- if and (eq .ca "le") (ne $env "prod") -}}
{{ printf "\n" }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: certificate-{{ .host | replace "ENV" $env | replace "." "-" }}
  namespace: {{ $env }}-{{ $proj }}
spec:
  secretName: {{ $env }}-{{ $proj }}-ingress-tls-{{ .host | replace "ENV" $env | replace "." "-" }}
  commonName: "{{ .host | replace "ENV" $env }}"
  dnsNames:
  - "{{ .host | replace "ENV" $env }}"
  {{- range .aliases }}
  - "{{ . | replace "ENV" $env }}"
  {{- end }}
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt-prod
{{- end -}}

{{- end -}}
{{- end -}}
